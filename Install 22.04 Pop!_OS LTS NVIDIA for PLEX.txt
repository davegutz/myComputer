HP Omen 15" 2022

# Pop!OS is superb choice for an NVIDIA PC of any kind.  System 76 optimized it for NVIDIA gaming.

# Pop!_OS (popos) is Ubuntu clone.  It doesn't have 'snapd' installed by default.  Once that is installed, installation is similar to Ubuntu.  Pycharm-community did not work right so had to download and create shortcut.  x11/ Xorg is installed by default.

######## Lessons Learned  ##########
- Do not interrupt command-line initiated upgrade.  Will break system.  Let it finish.
- Do not directly upgrade or delete the as-shipped installed python.  Will break system.  Use 'altinstall' make directive
- Always use virtual environment 'venv' unique for each python project.  Allows easy cross-platform 'install' operations in python.
- 'pauvcontrol' default volume on outputs - built-in or pulse audio - is too low to record movies using screencasting.  Set them to 100.
- Use 'ffmpeg -sources pulse' (or 'ffmpeg -sources alsa') to determine screencast source appropriate for the 'ffmpeg'.  Use the long initial string.
- 'grub' changes ordering of boot options upon ugrading kernel.   May be important, especially if you cannot view grub due to bad monitor.
- Acer monitors will not display grub on boot.   Have to learn the grub pattern and perform it blind to get to non-default os e.g. Windows.  Can use a video capture card plus a phone and 'USB Camera' app or capture card plus another PC and 'OBS' to view the new grub pattern.
- New linux os  have Wayland gui system as default.   Breaks a lot of programs.  Resort to Xorg = X11 instead.
- A lot of boot problems can be fixed at end of failed boot using 'Ctrl+Alt+F5' and 'sudo' commands as needed.  Restoring snap applications and snap itself is easy as are desktop managers.
- 'puTTY' is a tried-and-true cross-platform terminal emulator and will save a lot of work if used on your cross-platform applications. 
- 'ffmpeg' is a tried-and-true cross-platform terminal emulator and will save a lot of work if used on your cross-platform applications.
- Python's native 'ffmpeg' is about 4x faster than one installed in the system.
- Ubuntu community is supportive.  I have managed to solve every problem.  Social media in order of helpfulness:  'StackExchange', 'Ubuntu Forums', 'Reddit', 'askUbuntu'.
- Python's built-in UNIX time utilities easier to use than on-line epoch sites.
- GitHub is great way to coordinate cross-platform activities.  Do not track 'dist', 'build', '.idea', '.vscode', 'venv', '...someapp.cpp'.  
- Install settings files in local temp folders for seamless iteration of design changes.  And don't track using GitHub.
- Don't install figures in GitHub.  They're basically unreadable as a historical record.   Some value in keeping them in local machines for reference.  Instead make it easy to reproduce interactive plot tools.
- Do not expect other users to use GitHub.  Either figure out a way to distribute binaries or use GitHub yourself on their computers.
- Do not become dependent on streaming data, e.g. Particle Cloud, Blynk, Google Cloud.  Eventually they will try to charge you.  I am somewhat dependent on Google Cloud for ocamlfuse G-drive application.
- Use Python whenever possible.   'Scilab' and 'Matlab' tools may ALL be replaced by Python and the effort will be worth it.

#  Get ready
  Phone to approve google requests and usb tethering if needed
  Make space for linux.  Note partition #. (8).  Note any others you want to take over (5)
  Have >4 GB thumbdrive
  On Windows download iso.  flash using balenaEtcher
  Turn off bitlocker all drives
  Deauthorize tools like DVDfab, winxdvd, epubor in case can't get back
  Unplug second monitor, other usb's.  May leave mouse and keypad

# insert iso usb (pop-os_22.04_amd64_nvidia_49.iso)
  F1 (rapid F12 on Lenovo laptop, F10 on HP-Omen, F7 on little_guy) during boot.   Set boot order to USB.  *try or install ubuntu - normal installation - install updates (I tried minimal installation - lots of things didn't work right)
  Choose 'try or install ...'  3 min to next step - may hear music

  # Begin install Pop
     # Initial display will be wonky because pop doesn't recognize old Acer monitor
     # Fresh clean install
     # pop won't ask for wireless
     # encrypted
     # daveg / pwd   # can change passwords later but note that this initial pwd will be the lock for LUKS file system encryption.  I suggest start with your final password here then temporarily change to a short one for install

  # It should restart to Linux without Bios boot
  # It came up without wifi.  Connect ethernet to grab updates and fix wireless


# Fix 5G network connect:
  sudo dhcpcd5
   ubuntu wifi connected no browse
      Use the Google Public DNS IP in /etc/resolv.conf
      sudo cp /etc/resolv.conf /etc/resolv.conf.bak
      sudo nano /etc/resolv.conf
         add
         nameserver 8.8.8.8
        nameserver 8.8.4.4
        to bottom of file, leaving everything else in there


# Connect online accounts
  # firefox sign in and google
 
# ASAP:
  sudo apt update
  sudo do-release-upgrade  # ?
  sudo apt upgrade             # ?
  sudo apt autoremove
  sudo apt install -y snapd   #############################!!!!!!!
# github desktop
  sudo wget https://github.com/shiftkey/desktop/releases/download/release-3.1.1-linux1/GitHubDesktop-linux-3.1.1-linux1.deb
  sudo apt-get install -y gdebi-core 
  sudo gdebi GitHubDesktop-linux-3.1.1-linux1.deb
  github
    # sign in to GitHub.com.  Your password will be available in BitWarden
	# Download myComputer to get this file.

  # wifi for broadcom:
  sudo apt install bcmwl-kernel-source
#  sudo apt update
#  sudo apt install firmware-b43-installer

  Open popshop gui (Applications) install sqlitebrowser, brasero, caffeine, vlc
  sudo kernelstub -a mem_sleep_default=deep  # prevent not waking after suspend
  Restart

# Install apps
  sudo snap install snapd
  logout / log back in to organize snapd ########## important!!!!  IT WILL WORK IF YOU DO THIS
  sudo snap install plexmediaserver # for remote laptop (for trips) as well as basement server
  sudo apt install ./Downloads/code_1.90.2-1718751586_amd64.deb
  sudo apt install -y fuse libfuse2  # For appImage
  sudo apt install -y ffmpeg
  sudo apt install -y git
  sudo apt install --fix-missing -y python3-pip
  sudo apt install -y python3-tk  # for pyCharm
  sudo apt install -y dhcpcd5
  sudo apt install dos2unix
  sudo apt install LocalSend
  sudo apt install xsel
  sudo apt install -y pavucontrol  # for myPyScreencast
  
  # Flatpak used in pop!os makes path errors for pycharm-community (won't find special python build in /usr/local/bin).  Have to install it using snap then do some extra setup steps.
  # uninstall the pycharm-community already installed
  sudo apt install snapd
  sudo snap install --classic pycharm-community


  # VLC
    Tools-preferences-codecs  disable hardware-accelerated-decoding  save
    May have to restart vlc
  
  # kdenlive https://kdenlive.org/en/download/  select and install flatpak


  # Configure sound
  sudo nano /etc/modules-load.d/modules.conf
  # Add following line to /etc/modules-load.d/modules.conf
  snd-aloop
  # To start it for this session
  sudo modprobe snd-aloop
  # you can just plug in the usb headset and adjust the sound settings


  # google drive stuff
  sudo add-apt-repository ppa:alessandro-strada/ppa
  sudo apt update && sudo apt install -y google-drive-ocamlfuse
  # Special google-drive-ocamlfuse:  need to run with a secret so I stored it in davegutz2006 gmail
  # run google-drive-ocamlfuse using command line store in email:  search for 'google-drive-ocamlfuse'
# I had to setup google cloud free trial.  Project 6102.  Enable Google Drive API.
# After authorizing in browser should see 'Access token retrieved' in term
    mkdir ~/google-drive
    google-drive-ocamlfuse ~/google-drive/  # add -debug to this if problems. then  'more /home/daveg/.gdfuse/default/gdfuse.log'
    nano .gdfuse/default/config
      stream_large_files=true  # https://www.reddit.com/r/PleX/comments/67d5m6/googledriveocamlfuse_experience_to_share/
    mkdir ~/bin
cat << EOF > /home/daveg/bin/start_google-drive-ocamlfuse
#!/bin/bash

while true; do
  # check to see if there is a connection by pinging a Google server
  if ping -q -c 1 -W 1 8.8.8.8 >/dev/null; then
    # if connected, mount the drive and break the loop
    google-drive-ocamlfuse /home/daveg/google-drive/; break;
  else
    # if not connected, wait for second and then check again
    sleep 1
  fi
done
EOF
    chmod +x /home/daveg/bin/start_google-drive-ocamlfuse
    sudo ln -s  /home/daveg/bin/start_google-drive-ocamlfuse /etc/apm/resume.d/restart_gdo.sh
    # open Startup Applications and add /home/daveg/bin/start_google-drive-ocamlfuse


 # from email search for 'restart_gdrive.h script' and download that script to desktop
 # won't be run but commands are useful to restart google-drive ('??????????' in ls -rlt of homes)



  # Another version of Python:  call by version e.g. >python3.12
  #**********NOTE:  never replace default python in Debian-based Linux
  # https://ubuntuhandbook.org/index.php/2021/10/compile-install-python-3-10-ubuntu/

  # dependencies
  sudo apt update
  sudo apt install -y wget build-essential
  sudo apt install -y libreadline-dev
  sudo apt install -y libncursesw5-dev
  sudo apt install -y libssl-dev
  sudo apt install -y libsqlite3-dev
  sudo apt install -y tk-dev
  sudo apt install -y libgdbm-dev
  sudo apt install -y libc6-dev
  sudo apt install -y libbz2-dev
  sudo apt install -y libffi-dev
  sudo apt install -y zlib1g-dev
  sudo apt install -y portaudio19-dev


  # get alternate python to call from venv in pycharm

  https://www.python.org/ftp/python/
  download Python-3.12.8.tar.xz
  cd Downloads/
  tar -Jxf Python-3.12.8.tar.xz

  # compile and install it (do make clean first if adding --enable-shared to an existing build)
  cd Python-3.12.8/
  ./configure --enable-optimizations --enable-shared
  sudo make -j4 && sudo make altinstall
  sudo ldconfig /usr/local/lib  # done once to load shared libraries (maybe 'pip3 install uswgi' works)
     
  # verify
  python3.12 --version
  python3.12 -m pip --version
  
  # uninstall
  cd Downloads/Python-3.12.8/
  sudo make uninstall
  
  # use
  use .venv in pycharm to set up and use an app with this new python version
   
   
  # YouTube downloader
  # ClipGrab
  https://github.com/yt-dlp/yt-dlp?tab=readme-ov-file#release-files
    Get yt-dlp file for Linux
  https://clipgrab.org/download-clipgrab/
    Free Download
    cd Downloads
    chmod a+x ClipGrab-3.9.10-x86_64.AppImage
    ./ClipGrab-3.9.10-x86_64.AppImage  # Will error first time, looking for yt-dlp.  Press Continue not exit, to get folders ClipGrab made
    mv yt-dlp /home/daveg/.local/share/ClipGrab/ClipGrab/
  Do a google search for 'clipgrab' and save the blue circle icon as Downloads/ClipGrab.jpeg
    
cat << EOF > /home/daveg/Desktop/ClipGrab.desktop
[Desktop Entry]
Name=ClipGrab
Exec=/home/daveg/Downloads/ClipGrab-3.9.10-x86_64.AppImage
Icon=/home/daveg/Downloads/ClipGrab.jpeg
comment=app
Type=Application
Terminal=false
Encoding=UTF-8
Categories=Utility;
EOF

  Right click on ClipGrab.desktop and set 'Allow Launching' and 'Properties - Run as Program'
    Re-run
  sudo mv /home/daveg/Desktop/ClipGrab.desktop /usr/share/applications/
  



  # Configure for Development
  Open pyCharm-Community
    Setup venv for python, can be used in Code.  Update pip etc before importing more packages
    # also use local dictionary in settings - editor - natural languages - spelling (uncheck 'use single...')
    ***********Caution - use pycharm to install python interpreters
    ***********I followed deb process and made ubuntu unbootable
    Choose interpreter - local - run something to determine packages at least numpy, matplotlib, reportlab, easygui, pyshortcuts, openai-whisper, configparser
    May have to start twice
  Open pyCharm install venv for each github repository	
  
    # movie_Scraper notes
    Use own .venv for install to work portably
    Search for 'PySimpleGUI' in email for 'License key of:...' then open attachment.  First run will bomb.  Just run again.
    # TODO: investigate message '_tkinter.TclError: image "pyimage7" doesn't exist'
    Set DB location to /home/daveg/google-drive/Movies Stuff

    Run install.py and follow instructions

    Findit in applications and save to favorites
  
    
    # myPyScreencast notes
    Use own .venv for install to work portably
    Open a browser and start playing some music on youTube
    insert headphones  !!!
    pavucontrol  # assign browser cast to LoopbackAnalogStereo (verifies this kills spkr snd)
    ********
	**** pavucontrol defaults to low volume (esp important on loopback output).   Set it to 100%
	********
    # Find your loopback sound
    ffmpeg -sources pulse
    Auto-detected sources for pulse:
this one--->      alsa_output.platform-snd_aloop.0.analog-stereo.monitor [Monitor of Loopback Analog Stereo] (none)
      * alsa_input.platform-snd_aloop.0.analog-stereo [Loopback Analog Stereo] (none)
      alsa_output.pci-0000_34_00.6.analog-stereo.monitor [Monitor of Family 17h/19h HD Audio Controller Analog Stereo] (none)
      alsa_input.pci-0000_34_00.6.analog-stereo [Family 17h/19h HD Audio Controller Analog Stereo] (none)
      alsa_input.usb-MACROSILICON_USB_Video-02.analog-stereo [USB Video Analog Stereo] (none)
      alsa_input.usb-046d_HD_Pro_Webcam_C920_AD5AC5DF-02.analog-stereo [HD Pro Webcam C920 Analog Stereo] (none)
ffmpeg -f pulse -i alsa_output.platform-snd_aloop.0.analog-stereo.monitor -t   12.0 -y  "/home/daveg/Documents/Recordings/test1_raw.mp4"


    pactl list short sources  # to find name of output (NOTE: may need to insert headphones to get this all to work)
    Screencast: Video: x11grab  :0.0+0.0   Audio: pulse  alsa_output.platform-snd_aloop.0.analog-stereo.monitor
    # Check features of ffmpeg
      ffmpeg -version |grep x11grab  && ffmpeg -version |grep gpl && ffmpeg -version |grep libx264 && ffmpeg -version |grep libmp3lame && ffmpeg -version |grep nonfree
      if comes up blank proceed down to 'install ffmpeg for screencaset'
    # helpful to install audacity in addition to pauvcontrol (previously)
    sudo snap install audacity


  # auto suspend  ************************************
  # get suspend_until from the folder this file came from
# or:
cat << EOF > /home/daveg/bin/suspend_until
#!/bin/bash

# Auto suspend and wake-up script
#
# Puts the computer on standby and automatically wakes it up at specified time
#
# Written by Romke van der Meulen <redge.online@gmail.com>
# Minor mods fossfreedom for AskUbuntu
#
# Takes a 24hour time HH:MM as its argument
# Example:
# suspend_until 9:30
# suspend_until 18:45

# ------------------------------------------------------
# Argument check
if [ $# -lt 1 ]; then
    echo "Usage: suspend_until HH:MM"
    exit
fi

# Check whether specified time today or tomorrow
DESIRED=$((`date +%s -d "$1"`))
NOW=$((`date +%s`))
if [ $DESIRED -lt $NOW ]; then
    DESIRED=$((`date +%s -d "$1"` + 24*60*60))
fi

# Kill rtcwake if already running
sudo killall rtcwake

# Set RTC wakeup time
sudo rtcwake -l -m mem -t $DESIRED &

sleep 5
sudo systemctl restart snap.plexmediaserver.plexmediaserver.service
EOF
chmod +x /home/daveg/bin/suspend_until

  # Cron tab uses computer time (> date)
  sudo crontab -e
1 0 * * 1-6 /home/daveg/bin/suspend_until 16:00  # Mon - Sat 1 min after midnight
1 0 * * 0 /home/daveg/bin/suspend_until 10:15   # Sun. Face the Nation at 10:30 Sun.
  sudo crontab -l # to show current
  #? ssudo crontab -  # to update crontab
  # no restart of any kind needed because cron simply reads all crontab files every minute


  # Test on hpomen 
  sudo crontab -e
0 14 * * * /home/daveg/bin/suspend_until 15:30
  sudo crontab -r  # reset

  pop!os - settings - Power - Automatic suspend off,  - screen blank 15 min

  # Cleanup
  sudo passwd daveg  # passwords:  ignore warnings
  sudo passwd # root
  rm ~/.local/share/keyrings/login.keyring
  sudo apt autoremove
  cd
  sudo apt autoclean
  sudo apt clean
  sudo apt install deborphan
  sudo apt remove $(deborphan)


  # Seagate harddrive
  # #'secure backup' refers to the really long secure password in BitWarden 'secure F secure.vhdx'


  # Plex
  go turn off the main plex server in the house.   It will confuse plex for next step
  start plexmediaserver using applications menu (snap didn't do it)
  plex started using  menus - sign in with google id
  need to 'claim' this new installation.  There should be some visual clues in the plex
  menus, yellow exclamation points, yellow triangles
  name:  PLEX-LINUX on pc for server.  Uncheck "Allow me to access my media outside my home"
  connect usb drive then:
  plex - manage libraries - select the sources.  WAIT BEFORE FINISHING A LIBRARY ADD OR PATH WILL BE SHORTENED
     Movies:  /media/daveg/Lib/Movies
     TV Shows: /media/daveg/Lib/TV Shows
     Other Videos: /media/daveg/Lib/Videos
  after several hours of content loading, you will need to shutdown plex and restart to see the content
  Settings - Transcoder - deselect 'Use hardware acceleration when available'
                  - specify Transcoder Temporary Directory = /media/daveg/Videos/DVRcache
  dvr - mounted spare hard drive 3 TB named 'DVRcache'
      - use 'Files' to browse to the dvr drive.  Right click properties for 'DVRcache':  set 'create & delete' permissions for owner, group and others.  Also go into 'Change 
  
  # give plexmgr permissions
  # add plexmgr to group daveg
      sudo usermod -a -G daveg plexmgr
  restart
  sudo chown daveg /media/daveg
  sudo chmod -R a+rwx /media/daveg
  #sudo chmod a+rwx /media/daveg/Videos/DVRcache
      
  Permissions for Enclosed Files' and set as shown below.
      - Owner:  me
           Access: Create & Delete (C&D)
      - Group:  daveg
           Access: C&D
      - Others:
      	   Access: C&D
         
         Enclosed Files
             Files		Folders
             Owner R&W		C&D
             Group R&W		C&D
             Other R		Access only
             
  add to TVshows library:    /media/daveg/Videos/DVRcache
  switch top tab of each library display from 'Recommended' to 'Library'
             
  Mount the 3TB drive using Disks #  now what? TODO



  # Samba for file sharing in network of home
  sudo apt install -y samba
  sudo apt install samba samba-common-bin
  sudo apt install net-tools
  sudo apt install vino -y
  sudo apt install -y xrdp
  sudo systemctl enable xrdp
  sudo apt-get install libarchive-zip-perl  # for Particle workbench, crc32

  # refer to  https://askubuntu.com/questions/855139/cannot-access-shared-folder-in-ubuntu-from-windows-10
    will not find system-config-samba  make changes by hand later in conf files
  ## sudo apt install samba system-config-samba
  sudo mkdir /Public
  sudo chmod -R 0777 /Public
  sudo adduser --no-create-home plexmgr
  # Samba username & password  **************same pwd as daveg ****************#
  sudo usermod -u 998 plexmgr
  sudo smbpasswd -a plexmgr  # use same pwd as daveg
  # Open firewall
  sudo ufw allow samba

  # Add config for Public
  sudo nano /etc/samba/smb.conf
  # end Share Definitions (just before printers, use ctrl-w to search for [printers]
inherit permissions = yes 
  # bottom
[Public]
comment = public share, no need to enter username and password
;path = /srv/samba/Public/
path = /Public/
browseable = yes
writable = yes
guest ok = yes

  # Other Samba
  systemctl status smbd nmbd  # don't know what this does
  sudo systemctl start smbd nmbd
  #sudo gedit /etc/samba/smb.conf
  sudo service smbd restart && sudo service nmbd restart
  # Samba username & password  ******************************
  sudo groupadd samba
  sudo gpasswd -a plexmgr samba
  <network-usr-name>=plexmgr  pwd=126262  *************************************
  sudo mkdir -p /srv/samba/private/
  sudo setfacl -R -m "g:samba:rwx" /srv/samba/private/
  testparm  # see your changes
  sudo systemctl restart smbd nmbd
  # pop!os settings - sharing:
    everything shareable, even last item
    set password same as others, e.g. daveg / 1262**
  # restart - note ip for windows.  pop_os will be visible in 'files' app
  ifconfig
  
  OK address now 192.168.4.21.  Try to make it static by EERO phone app (reservation). Change name from pop-os-# to pop-os-plex

  send email noting static address to windows users so they can change shortcuts
  

################# Fixes

# gdm3 fail on restart:
# first try following if gdm fail on restart.  Also works kauditd_printk_skb hang
  # ctrl+alt+F5 to get TTY login.  
    # sudo apt install --reinstall ubuntu-session
    # reboot


# kernel parameters on startup
sudo kernelstub -a "amdgpu.ppfeaturemask=0xffffffff"


# fix wake from suspend
sudo kernelstub -a mem_sleep_default=deep
restart

# TODO fix pyimage7 error on intial run of GUI_sqlite_scrape
# just rerun; no need to exit re-enter or reboot or logout/in


# pycharm-community cannot find /usr/local/bin
# problem with flatpak version of pycharm-community.  Uninstall and reinstall using snap


# Fix missing 'Settings' (if needed)
sudo apt-get install -y ubuntu-desktop


# Fix "gnome-control-center not found  in path" when launching Settings
sudo apt install gnome-control-center


# Desktop icons mission 
 sudo apt-get install --reinstall ubuntu-desktop
 restart


# /var/log filled with false positives ''HDY_IS_CAROUSEL_BOX (self)' failed'
sudo nano /etc/xdg/autostart/io.elementary.appcenter-daemon.desktop 
change 60->0
"So after digging some more on this issue, I believe I managed to fix my issue. The user who originally posted the github article merged it with another article (https://github.com/pop-os/shop/pull/349) where you change the "io.elementary.appcenter-daemon.desktop" to auto-start immediately after logging in, instead of waiting 60 seconds to start. I found this file located in this folder "/etc/xdg/autostart". I then edited the "X-GNOME-Autostart-Delay" entry to a value of "0" and restarted my system. After the restart I opened then closed the Pop Shop and checked the journalctl. I didn't see any of the logs listed above. I will keep an eye on this and update this post with any further details." 


