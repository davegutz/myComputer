Lenovo Laptop

# Lubuntu is based on Ubuntu.  It doesn't have 'snapd' installed by default.  Once that is installed, installation is similar to Ubuntu.  Pycharm-community did not work right so had to download and create shortcut.  LXQt is desktop. x11/ Xorg is installed by default.

#### When in doubt, use instructions for Ubuntu


#***************  swapfile size must be at least 3G when RAM is just 4G.  Go to bottom of file.
#***************  vm.swappiness=10 (from 60) makes system responsive to mouse 

# insert iso usb
  F1 (rapid F12 on Lenovo laptop, F10 on HP-Omen, F7 on little_guy) during boot.   Set boot order to USB.  *try or install Lubuntu - normal installation - install updates (I tried minimal installation - lots of things didn't work right)
  Choose 'Normal installation'

# Restart process will prompt you to remove USB

# It should restart to Lubuntu without Bios boot
# Install Updates and choose to reboot
# Install drivers - there were none available

# Install following basic stuff then use 'Install 24.04 Ubuntu.txt' ('I..')
  sudo apt update
  sudo apt upgrade
  sudo apt autoremove
  sudo apt install -y git
  ##sudo apt install -y git-all
  sudo apt install snapd
  sudo apt install -y ubuntu-restricted-extras
  sudo apt install -y python3-pip
  # lubuntu installs following by default:
    # libreoffice, vlc, firefox
  # github desktop
  sudo wget https://github.com/shiftkey/desktop/releases/download/release-3.1.1-linux1/GitHubDesktop-linux-3.1.1-linux1.deb
  sudo apt-get install -y gdebi-core 
  sudo gdebi GitHubDesktop-linux-3.1.1-linux1.deb
  github
  # When prompted during initial clone menu option, sign in to GitHub.com.  Your password will be available in BitWarden.  Do not proactively log in to github on the web using browser; wait for the GitHub Desktop application to request it; to avoid an infinite authorization loop.
 
    
  # Connect online accounts google drive stuff
  # to bootstrap look for email subject 'google drive stuff'
  # Menu - Desktop Settings - LXQTsettings - autostart - /usr/bin/google-drive-ocamlfuse
  
  # vscode 'snap install code --classic'
    # install particle workbench extension
    # sign into particle asap
    
  # pycharm-community using 'I..'
   sudo apt install -y python3-tk  # for pyCharm
   snap install pycharm-community --classic
   # give it time to index first time

	# pycharm pyStateOfCharge
	GUI_..py  # get this to run using local venv, then do
	install.py
	
	# vscode SOC_Particle
	# 'crc32 tool is not found' fixed by installing following perl util
	sudo apt install libarchive-zip-perl  # don't have to restart anything
	
	# pycharm movie_Scraper
	# setup local venv
	GUI_..py # get this to run using local venv, then do
	install.py
	# pysimpleguiKey.txt in same folder as this file
	# ignore '_tkinter.TclError: can't use "pyimage7" as iconphoto: not a photo image'
	

  sudo apt install LocalSend
  	
  	
  ########better to have NO media server on little lenovo
  #  Jellyfin media server
  sudo apt install -y flatpak
  sudo apt install -y gnome-software-plugin-flatpak
  flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
  # reboot
  flatpak install flathub com.github.iwalton3.jellyfin-media-player
  # run it
  flatpak run com.github.iwalton3.jellyfin-media-player
  # remove
  flatpak remove com.github.iwalton3.jellyfin-media-player
  

  # putty (using 'I..')
  sudo apt install -y putty
    # add yourself to uucp group so you can use /dev/ttyACM0 unrestricted for Arduino/Particle use.   Preferences - LXQt Settings - users and groups - daveg - properties - groups - dialaout && uucp     
    sudo nano /etc/udev/rules.d/01-ttyusb.rules
SUBSYSTEMS=="usb-serial", TAG+="uaccess"
    # Logout + Log back in


  # Set screen timeout at Settings - Power
  # reboot


  # Simple serial check (optional to debug) plug a device in
  sudo apt install screen
  sudo screen /dev/ttyACM0 230400

  # Arduino from Install Ubuntu
  sudo apt install -y arduino
  # Arduino libraries for CTE collision with Arduino IDE v1.8.19:  Arduino_LSM6DS3, AceCommon, AceCRC, AceRoutine, AceUtils, Adafruit BusIO,
  Adafruit LSM6DS, SafeString, Boards - Boards Manager - Arduino SAMD boards
  # Arduino board for CTE Nano:  Arduino Nano 33 IoT in Arduino SAMD library
  # Arduino dark theme:   
  https://projecthub.arduino.cc/rahulkhanna/dark-theme-for-arduino-ide-a12efd
  https://github.com/jeffThompson/DarkArduinoTheme/pulse
  # download .zip and unzip in place in Downloads
  cd /usr/share/arduino/lib
  sudo mv theme themeOld
  sudo cp -r /home/daveg/Downloads/DarkArduinoTheme-master/theme .

  # vlc
  sudo apt install -y vlc



# Cleanup
sudo apt autoremove
cd
sudo apt autoclean
sudo apt clean
sudo apt install deborphan
sudo apt remove $(deborphan)

passwords per 'I..'
# Passwords...ignore warnings
sudo passwd daveg
sudo passwd # root
rm ~/.local/share/keyrings/login.keyring


# Play VLC sound over HDMI
sudo apt install pulseaudio
sudo apt install alsa-utils
  #### not sure if all this pactl stuff needed
   pactl load-module module-alsa-sink device=hw:0,3
   sudo nano /etc/pulse/default.pa
   # Add this line at the end
   pactl load-module module-alsa-sink device=hw:0,3
  open PulseAudio Volume Control - Configuration -  Profile: Digital Stereo (HDMI) Output + Analog Stereo Input
   #### did up to here in latest trial and sound worked on HDMI


######undone
    sudo alsamixer - F6 - default - unmute S/PDIF  # to unmute manually
    sudo alsactl --file ~/.config/asound.state store
    sudo nano ~/.bashrc
    # Add this line at the end
    alsactl --file ~/.config/asound.state restore


# NoMachine
  https://download.nomachine.com/download/9.0/Linux/nomachine_9.0.188_11_x86_64.tar.gz
  cd Downloads
  sudo cp -p nomachine_9.0.188_11_x86_64.tar.gz  /usr
  cd /usr
  sudo tar zxf nomachine_9.0.188_11_x86_64.tar.gz 
  sudo /usr/NX/nxserver --install
  # uses port: 4000.  Allow through firewall
     # firewall
      sudo apt install gufw
      open 'firewall config' and turn on 'status'  that's it. close it
      
# manage bluetoot
  sudo apt install blueman 
  
# zoom
  # download zoom deb file
  cd ~/Downloads
  chmod 777 zoom_amd64.deb 
  sudo apt install ./zoom_amd64.deb

# opera
  # download opera deb file
  cd ~/Downloads
#  sudo apt install  ./opera-stable_119.0.5497.56_amd64.deb
  sudo apt install gdebi
  gdebi-gtk
  # browse to and open the .deb file using the gui and remove it


# disks
  sudo apt install gnome-disk-utility
  
# Swappiness
  cat /proc/sys/vm/swappiness
  sudo sysctl vm.swappiness=10
  sudo nano /etc/sysctl.conf 
    vm.swappiness=10
  
# Increase swap
  swapon --show
  sudo swapoff /swapfile
  sudo fallocate -l 8G /swapfile
  sudo mkswap /swapfile
  sudo swapon /swapfile
  swapon --show
 
# Configure sound
  sudo apt  install ffmpeg
  sudo apt install -y portaudio19-dev
  sudo nano /etc/modules-load.d/modules.conf
  # Add following line to /etc/modules-load.d/modules.conf
  snd-aloop
  # To start it for this session
  sudo modprobe snd-aloop
  # you can just plug in the usb headset and adjust the sound settings

# The 4GB Lenovo pcs don't have enough cpu bandwidth to run ffmpeg even with low video quality
# so don't bother with screencast

# Jellyfin
  curl -s https://repo.jellyfin.org/install-debuntu.sh | sudo bash
  sudo usermod -a -G daveg jellyfin
  # visit  http://localhost:8096
  sudo chown -R jellyfin /media/daveg
  # use same pwd as user  #################### I had to do this step twice because of chown

# disk usage
  sudo apt install baobab
  sudo apt install git-filter-repo
  get-filter-repo --path <to pack>  # didn't work well.  Just delete large pack files instead
  cd Downloads
  sudo apt install gdebi
  sudo gdebi-gtk &
  # open .deb files and remove as desired
  
# Bluetooth gui (cli is 'bluetoothctl')
  Lubuntu - System - Discover - 'bluetooth'
     - 'Bluetooth Manager'
  It will appear under Lubuntu - Desktop settings
     
# KDEconnect
  #sudo apt install kdeconnect
  #sudo ufw allow 1714:1764/tcp
  #sudo ufw allow 1714:1764/udp
  #sudo ufw reload
  sudo apt remove kdeconnect

# Opera (for single window instance to open drive.google.com without bogging down)
######doesn't support passkeys yet
  #sudo apt update
  #sudo apt install snapd
  #sudo snap install opera
  sudo snap remove opera
  
# Chrome (for single window instance to open drive.google.com without bogging down)
######doesn't support passkeys yet either.  It's the more general browser so I installed it for now
  https://www.google.com/chrome  # download .deb
  cd Downloads
  sudo dpkg -i google-chrome-stable_current_amd64.deb
  # If you encounter dependency issues, run: sudo apt --fix-broken install and then repeat the previous command. 

# Guake
  sudo apt install guake
  # set to start on login
  
# Ferdiun
  Install ferdium using File - System Discover
  
  
########################### Rclone + Drive ######################################  
# Setting up Rclone to connect with Google Drive in Lubuntu involves installing Rclone and then configuring a "remote" for Google Drive.

  1. Install Rclone:
     Open the terminal in Lubuntu and Execute the following command to install Rclone.

  sudo apt install rclone


2. Configure Rclone for Google Drive:
    Initiate the Rclone configuration process by running: 

  rclone config


    Follow the prompts:
        Enter n to create a new remote.
        Provide a name for your remote (e.g., gdrive).
        Select drive from the list of storage types for Google Drive. (18)
        Accept the default client_id and client_secret by leaving them blank and pressing Enter.
        Choose the desired scope for Rclone's access to your Google Drive. For general use, selecting 1 (Full access) is common.
        Leave root_folder_id and service_account_file blank unless you have specific needs.
        
        Edit Advanced config> 
          oauth Access Token:    https://myaccount.google.com/apppasswords  name it Rclone  "wbyh scsi xnnt ybgr"
          auth_url:  blank
          token_url: blank
        upload_cutoff> 1G  .... all else default
       
        When asked about Use auto config?, type y and press Enter. This will open a web browser for authentication with your Google account.
        Complete the authentication process in your web browser, allowing Rclone access to your Google Drive.
        Return to the terminal. You will be asked if this is a Team Drive; enter n unless you are using a Team Drive.
        Confirm the configuration by typing y and pressing Enter. 

    Exit the configuration wizard by typing q. 


3. (Optional) Mount Google Drive:
    Create a local directory to serve as the mount point for your Google Drive: 

  mkdir ~/gdrive

    Mount your Google Drive to the newly created directory: 

  rclone mount gdrive: ~/gdrive &


(The & allows the command to run in the background, freeing up your terminal.)


add Startup Application:  "gdrive"  & "rclone mount gdrive: ~/gdrive &"
remove ocamlfuse


Your Google Drive is now accessible through the ~/gdrive directory in your Lubuntu system. You can interact with it using your file manager or command-line tools. To unmount, you can typically use fusermount -u ~/gdrive or stop the rclone mount process if it's running in the foreground. 
########################### end Rclone + Drive ######################################  


# glances system monitor
  sudo apt install glances


# Firefox busy save setting
about:config
browser.sessionstore.interval 150000
